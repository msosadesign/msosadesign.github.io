[
  {
    "name": "WebApp Dashboard",
    "cover": "https://user-images.githubusercontent.com/59977013/253012806-542d74ce-8197-46ac-a14d-297b7d8be7db.png",
    "description": "Dashboard based website created using css grids and flexbox, mostly written in HTML/CSS with some interactions on JS and implementing charts.js for the widgets.",
    "article": "<p>Dashboard WebApp created with css grids and flexbox, mostly written in HTML/CSS with some interactions on JS.</p><p>Link: <a target=\"_blank\" href=\"https://msosadesign.github.io/treehouse-project-7/\">https://msosadesign.github.io/treehouse-project-7/</a></p><p>Technologies used:</p><ul><li>HTML/CSS</li><li>Javascript</li><li>Chart.js</li></ul><p>This is the seventh project in the Treehouse frontend development techdegree. It meant to test my skills in CSS grid, flexbox and the implementation of external JS plugins, such as Chart.js. It consists of a dashboard view with various widgets that summarize the social analytics gathered with the app.</p><p><img src=\"https://github.com/msosadesign/treehouse-project-7/assets/59977013/542d74ce-8197-46ac-a14d-297b7d8be7db\" alt=\"image\"></p><p>The user can also see the activity of other users as well as send them a message.</p><p><img src=\"https://github.com/msosadesign/treehouse-project-7/assets/59977013/21c0e365-44cb-4478-befa-c0a44197b80d\" alt=\"image\"></p><p>Finally, there&#39;s a settings widget that saves any changes into the local storage, so the user can close the app, return in some other time and still have the same settings.</p>"
  },
  {
    "name": "Awesome Startup Directory",
    "cover": "https://user-images.githubusercontent.com/59977013/243427399-200d38ae-11bd-4969-b879-51a2ee6b5590.png",
    "description": "An employee directory that focuses on fetching data from an API and showing it asynchronously in a webpage. There's also some JS array iteration methods used in the project.",
    "article": "<p>An employee directory that uses an API to fetch all the info and make it usable.</p><p>Link: <a target=\"_blank\" href=\"https://msosadesign.github.io/treehouse-project-8/\">https://msosadesign.github.io/treehouse-project-8/</a></p><p>Technology used:</p><ul><li>HTML/CSS</li><li>Javascript</li></ul><p>This is the eighth project in the Treehouse FEWP techdegree, it focuses on fetching data from an API and showing it asynchronously in a webpage. There&#39;s also some JS array iteration methods used in the project.</p><p>I wrote the HTML and CSS to match the design as closely as possible:</p><p><img src=\"https://github.com/msosadesign/treehouse-project-8/assets/59977013/200d38ae-11bd-4969-b879-51a2ee6b5590\" alt=\"image\"></p><p>The webpage is responsive as well:</p><p><img src=\"https://github.com/msosadesign/treehouse-project-8/assets/59977013/0ed2d9eb-5d2f-4c19-8a63-54e3203ed626\" alt=\"image\"></p><p>Then I started to work with the employees API, fetching it asynchronously and using promises to catch any errors while loading the info. The code takes 12 random employees and shows them on the webpage, then the user can search by name:</p><p><img src=\"https://github.com/msosadesign/treehouse-project-8/assets/59977013/e1cf060a-3f75-4d14-8ed8-9872b25e37ea\" alt=\"image\"></p><p>Or click on a specific employee to see all its info from the popup, the user can switch employees and the popup fetches info dynamically:</p><p><img src=\"https://github.com/msosadesign/treehouse-project-8/assets/59977013/afbac144-caac-4fc3-97f1-ad239c16e3fc\" alt=\"image\"></p>"
  },
  {
    "name": "Wheel of Success",
    "cover": "https://user-images.githubusercontent.com/59977013/253069588-e4be5ea2-b6a5-4b4b-bd24-72f03b6ab4b1.png",
    "description": "A minigame where you have to choose letters to guess the hidden sentence. It uses Javascript DOM manipulation to add and remove classes as the user selects letters from the keyboard.",
    "article": "<p>A minigame where you have to choose letters to guess the hidden sentence.</p><p>Link: <a target=\"_blank\" href=\"https://msosadesign.github.io/treehouse-project-6/\">https://msosadesign.github.io/treehouse-project-6/</a></p><p>Technologies used:</p><ul><li>HTML/CSS</li><li>Javascript</li></ul><p>This is the sixth project of the Front End Development Techdegree, focused on testing my skills on Javascript DOM Programming. It&#39;s a minigame where you have to guess the hidden sentence, but you can only make 5 mistakes before losing.</p><p>There&#39;s a keyboard on the screen to select each letter, if you get one right, it will show it on the hidden sentence.<img src=\"https://github.com/msosadesign/treehouse-project-6/assets/59977013/7e851a4b-3f13-410d-a12b-15ee3d00b792\" alt=\"image\"></p><p>If you select a letter not present in the sentence, you lose a heart.</p><p><img src=\"https://github.com/msosadesign/treehouse-project-6/assets/59977013/b1506d45-8900-4a71-a5c2-06f25cff46ad\" alt=\"image\"></p><p>After losing all your hearts, you have to restart the game.<img src=\"https://github.com/msosadesign/treehouse-project-6/assets/59977013/b6dd71e0-c912-4c64-ae0c-e0bb53bd5ac2\" alt=\"image\"></p><p>Inside the code, there&#39;s an array holding all the sentences, each time the game starts, it takes a random sentence and obscures it. When the user selects a letter, the class .chosen is applied and the code verifies how many times the letter is present in the sentence, for each match in the sentence, the class .show is applied. Finally, the user wins once every letter is uncovered.</p>"
  },
  {
    "name": "Focus Timer",
    "cover": "https://user-images.githubusercontent.com/59977013/253035065-cadb9525-e6b1-427c-91bc-99f1f826a4cd.png",
    "description": "Timer with a focus on productivity, based on the pomodoro technique and tweaked for a different user experience. It's designed to discourage from any unnecessary distractions.",
    "article": "<p>This is a timer with a focus on productivity, based on the pomodoro technique and tweaked for a different user experience.</p><p>Link: <a target=\"_blank\" href=\"https://msosadesign.github.io/focus-timer/\">https://msosadesign.github.io/focus-timer/</a></p><p>Technologies used:</p><ul><li>HTML/CSS</li><li>SASS</li><li>Javascript</li><li>React</li></ul><p>The main objective of this timer is maximizing focus. When a person uses the pomodoro technique, oftentimes it&#39;s necessary to take pause the timer before it ends, either because of something necessary or just a distraction. The timer takes this into consideration and allows to pause but, any wasted time is added to the timer; this allows to stop the time in case anything important comes up while discouraging from any unnecessary distractions.</p><p><img src=\"https://github.com/msosadesign/focus-timer/assets/59977013/cadb9525-e6b1-427c-91bc-99f1f826a4cd\" alt=\"image\"></p><p>The timer also uses colors to indicate state, a dark background means it&#39;s time to focus, while the white background indicates a moment to relax.</p><p><img src=\"https://github.com/msosadesign/focus-timer/assets/59977013/d7c74815-b789-494e-af01-4f08ff42010c\" alt=\"image\"></p><p>This app was written with react, and sass for the styles. The current time and phase of the timer (focus/relax) is saved in the state. Also, I used an API to fetch random motivational phrases. The website uses notifications when the timer ends and is fully responsive.</p>"
  },
  {
    "name": "Newsletter Sign-Up Form",
    "cover": "https://user-images.githubusercontent.com/59977013/253029771-3cfec2f1-a6f5-4b4a-a748-cd13f3fb87f0.png",
    "description": "A signup form for a coding newsletter. I used flexbox and other layout utilities to make a responsive form. It uses verification to make sure every field is filled correctly.",
    "article": "<p>A signup form for a coding newsletter. It&#39;s fully responsive and uses verification to make sure every field is filled correctly.</p><p>Link: <a target=\"_blank\" href=\"https://msosadesign.github.io/treehouse-project-3/\">https://msosadesign.github.io/treehouse-project-3/</a></p><p>Technologies used:</p><ul><li>HTML/CSS</li></ul><p>This is the third project in the Front-end Development Techdegree meant to test my knowledge in web forms. I was tasked with creating a newsletter form. I used flexbox and other layout utilities to make a responsive form.</p><p><img src=\"https://github.com/msosadesign/treehouse-project-3/assets/59977013/3cfec2f1-a6f5-4b4a-a748-cd13f3fb87f0\" alt=\"image\"></p><p>Each field verifies that the inserted data is correct and when the user clicks the submit button, any empty field is indicated to the user.</p><p><img src=\"https://github.com/msosadesign/treehouse-project-3/assets/59977013/a9031551-24ae-45b5-bedc-f8da6bcc025c\" alt=\"image\"></p>"
  },
  {
    "name": "Circles UI Kit",
    "cover": "https://github.com/msosadesign/treehouse-project-4/assets/59977013/30c80de6-3820-4719-a04f-08fbb4cef90e",
    "description": "Mock website with the purpose of testing all the components, colors and fonts of the project. It uses SCSS as syntax and takes advantage of most sass functionalities.",
    "article": "<p>This is a website styled with sass, using scss syntax.</p><p>Link: <a target=\"_blank\" href=\"https://msosadesign.github.io/treehouse-project-4/\">https://msosadesign.github.io/treehouse-project-4/</a></p><p>Technologies used:</p><ul><li>HTML</li><li>CSS</li><li>Sass</li></ul><p>This is the fourth project in the Treehouse Front-end development Techdegree, meant to test my skills defining a styles guide with sass. It&#39;s a mock website with the purpose of testing all the components, colors and fonts of the project. It uses SCSS as syntax and takes advantage of most sass functionalities such as variables, mixins, functions, etc.</p><p><img src=\"https://github.com/msosadesign/treehouse-project-4/assets/59977013/30c80de6-3820-4719-a04f-08fbb4cef90e\" alt=\"image\"></p>"
  },
  {
    "name": "Walk for the World",
    "cover": "img/spotify/cover.png",
    "description": "Air pollution is a significant issue that affects everyone. I decided to create a fictitional campaign to analyze how an app like Spotify could help fight the problem.",
    "article": "<p>In today&#39;s world, <strong>air pollution is a significant issue that affects everyone</strong>. With more and more people becoming conscious of the impact of pollution on the environment and their health, <strong>it&#39;s essential to raise awareness and encourage individuals to take action.</strong> In this context, <strong>Spotify, one of the most popular music streaming apps, can play a crucial role in spreading the word and inspiring its users to make positive changes</strong>. This proposal outlines some ideas for how Spotify can leverage its platform to promote walking, reduce car usage, and educate its audience about air pollution, specifically targeting Gen Z and Millennials in Europe, where Spotify has the most active user base.</p><ul><li>Topic: Air pollution.</li><li>App: Spotify.</li><li>Target: Gen Z and Millennials. Europe being the most active country for Spotify.</li><li>Numbers: time spent using Spotify (25 hours/month), 1/3 of this time on curated playlists.</li><li>Ideas:<ul><li>Generate a user specific playlist for walking.</li><li>Add a modal screen to invite users to walk and listen to the playlist or any podcast on the topic.</li><li>Add a dedicated section in the homepage.</li><li>For non-premium users, when an ad comes up and there isn’t an ad available, instead of showing the default Spotify premium ad, talk about air pollution and how the user can help.</li></ul></li></ul><h3>Research</h3><p><strong>My first step was understanding how the Spotify Design System “Encore” works</strong>. I looked at the app from my phone and analyze every component to understand how can I send the message to the users. I searched online and read articles about Spotify’s Design System and how it was built.</p><p>I choose approaches that were already there to not clash with the existing design, but rather take advantage of it. This is how I chose a:</p><ul><li>Modal</li><li>Dedicated section</li><li>Advertisement</li><li>Generated playlist.</li></ul><p>In summary, every choice made was based on an existing approaches.</p><p><img src=\"img/spotify/app_ad.png\" alt=\"Example of Spotify screen\"></p><h3>Modal Screen</h3><p><strong>The modal will show up when the user opens Spotify</strong>. It’s an invitation to walk and avoid using the car. The playlist and podcasts serve as inspiration to take action.</p><p>Here&#39;s an example:</p><p><img src=\"img/spotify/modal_1.png\" alt=\"First modal mockup\"></p><p>Then there’s an alternative modal, the lack of imagery gives a more serious tone to the problem.</p><img src=\"img/spotify/modal_2.png\" alt=\"Second modal mockup\"><p><strong>I&#39;ve chosen to use a modal to give the users an immediate and clear CTA</strong>. If there wasn’t a modal, the other approaches would probably be ignored since they don’t require as much attention.</p><h3>Dedicated section</h3><p>This section is located at the homescreen, visible after the user sees the modal.</p><img src=\"img/spotify/dedicated_section.png\" alt=\"Spotify's dedicated section\"><p>It will contain the Spotify generated playlist and some podcasts on the topic of air pollution if the user wants get informed.</p><p>This is very common in the Spotify Design System. I choose this approach since:</p><ul><li>It flows with the content</li><li><strong>The user can keep scrolling</strong> and ignore it</li><li><strong>The user has have a central place to come back to</strong> in case they want to check it out some other time.</li></ul><h3>Advertisement</h3><p>It will show up only to non-premium users.</p><p><strong>The ad will explain why the user should pay attention to air pollution and what he can do to help</strong>, such as walking or taking public transport instead of using their car. Finally, it will invite to check out the playlist and some podcasts.</p><p><strong>It will show up when the user is listening to content and it’s time for an advertisement but there isn’t one available</strong>. Could also be played when the user is using Spotify inside the car.</p><p>I chose this approach since Spotify shows an ad even if they are not available, so <strong>we could take advantage of this and send our message, specially to driving users.</strong></p><img src=\"img/spotify/advertisement.png\" alt=\"Example of Spotify playlist\"><h3>Personalized Playlist</h3><p>This is how the playlist will look when the user opens it. It would be based on the user’s tastes and generated automatically by Spotify.</p><img src=\"img/spotify/playlist.png\" alt=\"First modal mockup\"><p>Also <strong>the playlist could be regenerated every day</strong> to allow the user to listen everyday when they are walking and not get bored of the same repeating songs.</p><p><strong>I chose this approach to inspire the users. It could be irritating to be asked to take a walk, so the playlist and podcast can encourage a desired and healthier behavior.</strong></p><h3>Conclusion</h3><p>To communicate the importance of air pollution, the first step was to research on Spotify, to understand how their Design System could handle this task. Looking at many use cases and different components, I decided to use these approaches: </p><ul><li><strong>Modal screen:</strong> to give an immediate and clear CTA.</li><li><strong>Dedicated section on homescreen:</strong> serves as a central point to return to.</li><li><strong>Advertisement:</strong> will show only to non-premium users when and advertisement is not available, to take advantage of the empty space and inform directly those who are driving.</li><li><strong>Personalized playlist and podcasts:</strong> to encourage users to walk.</li></ul><p>All of these decisions were based on existing designs, this will help keep the app consistent and avoid introducing new unnecessary components and possibly changing the UX/UI of the app.</p><h3>References</h3><p><a href=\"https://kommandotech.com/statistics/spotify-user-statistics/\">Spotify User Statistics</a><a href=\"https://www.start.io/blog/spotify-target-market-segmentation-user-demographics-audience-targeting-strategy/#:~:text=The%20typical%20Spotify%20user%20is,also%20enjoy%20the%20app&#39;s%20music.\">Spotify Market Segmentation </a><a href=\"https://spotify.design/article/can-i-get-an-encore-spotifys-design-system-three-years-on\">Can I get an Encore? Spotify’s Design System, Three Years On</a><br><a href=\"https://undraw.co/\">unDraw</a> used for the illustration in the modal and playlist cover<br><a href=\"https://unsplash.com/\">Unplash</a> used for the pictures in the album covers<br>Tools used: Figma for the Mockups</p>"
  }
]
